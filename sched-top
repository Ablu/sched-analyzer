#!/usr/bin/env python
#
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2022 Qais Yousef
import pandas as pd
import plotext as plt
import shlex
import subprocess
import time


def show_pelt():
    while True:

        df = pd.read_csv("/tmp/rq_pelt.csv")
        df.ts = df.ts - df.ts[0]
        df.ts = df.ts / 1000000000

        # We read in realtime, last row could end up being partially written.
        # dropping na should address this.
        df.dropna(inplace=True)

        num_cpus = len(df.cpu.unique())

        plt.subplots(2, 1)
        plt.subplot(1, 1).subplots(1, num_cpus)

        plt.cld()
        plt.clt()
        # plt.clf()
        for cpu in range(num_cpus):
            df_cpu = df[df.cpu == cpu]
            plt.subplot(1, 1).subplot(1, cpu+1)
            plt.plot(df_cpu.ts.values, df_cpu.util.values)
            plt.title("CPU {} util_avg".format(cpu))

        df = pd.read_csv("/tmp/task_pelt.csv")
        df.ts = df.ts - df.ts[0]
        df.ts = df.ts / 1000000000

        # We read in realtime, last row could end up being partially written.
        # dropping na should address this.
        df.dropna(inplace=True)

        plt.subplot(2, 1)
        for comm in df.comm.unique():
            df_comm = df[df.comm == comm]
            if df_comm.util.mean() > 512:
                plt.plot(df_comm.ts.values, df_comm.util.values, label=comm)
                plt.title("Tasks util_avg")

        plt.show()
        time.sleep(5)

if __name__ == '__main__':
    args = shlex.split("sudo ./sched-analyzer")
    sched_analyzer = subprocess.Popen(args)
    time.sleep(5)
    show_pelt()
